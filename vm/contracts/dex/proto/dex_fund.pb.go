// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: dex_fund.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//storage
type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token           []byte `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	Available       []byte `protobuf:"bytes,2,opt,name=Available,proto3" json:"Available,omitempty"`
	Locked          []byte `protobuf:"bytes,3,opt,name=Locked,proto3" json:"Locked,omitempty"`
	VxLocked        []byte `protobuf:"bytes,4,opt,name=VxLocked,proto3" json:"VxLocked,omitempty"` // lock for dividend, will release after 7 days
	VxUnlocking     []byte `protobuf:"bytes,5,opt,name=VxUnlocking,proto3" json:"VxUnlocking,omitempty"`
	CancellingStake []byte `protobuf:"bytes,6,opt,name=CancellingStake,proto3" json:"CancellingStake,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{0}
}

func (x *Account) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *Account) GetAvailable() []byte {
	if x != nil {
		return x.Available
	}
	return nil
}

func (x *Account) GetLocked() []byte {
	if x != nil {
		return x.Locked
	}
	return nil
}

func (x *Account) GetVxLocked() []byte {
	if x != nil {
		return x.VxLocked
	}
	return nil
}

func (x *Account) GetVxUnlocking() []byte {
	if x != nil {
		return x.VxUnlocking
	}
	return nil
}

func (x *Account) GetCancellingStake() []byte {
	if x != nil {
		return x.CancellingStake
	}
	return nil
}

type VxUnlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodId uint64 `protobuf:"varint,1,opt,name=PeriodId,proto3" json:"PeriodId,omitempty"`
	Amount   []byte `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *VxUnlock) Reset() {
	*x = VxUnlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VxUnlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VxUnlock) ProtoMessage() {}

func (x *VxUnlock) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VxUnlock.ProtoReflect.Descriptor instead.
func (*VxUnlock) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{1}
}

func (x *VxUnlock) GetPeriodId() uint64 {
	if x != nil {
		return x.PeriodId
	}
	return 0
}

func (x *VxUnlock) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type VxUnlocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unlocks []*VxUnlock `protobuf:"bytes,1,rep,name=Unlocks,proto3" json:"Unlocks,omitempty"`
}

func (x *VxUnlocks) Reset() {
	*x = VxUnlocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VxUnlocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VxUnlocks) ProtoMessage() {}

func (x *VxUnlocks) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VxUnlocks.ProtoReflect.Descriptor instead.
func (*VxUnlocks) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{2}
}

func (x *VxUnlocks) GetUnlocks() []*VxUnlock {
	if x != nil {
		return x.Unlocks
	}
	return nil
}

type CancelStake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodId uint64 `protobuf:"varint,1,opt,name=PeriodId,proto3" json:"PeriodId,omitempty"`
	Amount   []byte `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *CancelStake) Reset() {
	*x = CancelStake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelStake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelStake) ProtoMessage() {}

func (x *CancelStake) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelStake.ProtoReflect.Descriptor instead.
func (*CancelStake) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{3}
}

func (x *CancelStake) GetPeriodId() uint64 {
	if x != nil {
		return x.PeriodId
	}
	return 0
}

func (x *CancelStake) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type CancelStakes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cancels []*CancelStake `protobuf:"bytes,1,rep,name=Cancels,proto3" json:"Cancels,omitempty"`
}

func (x *CancelStakes) Reset() {
	*x = CancelStakes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelStakes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelStakes) ProtoMessage() {}

func (x *CancelStakes) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelStakes.ProtoReflect.Descriptor instead.
func (*CancelStakes) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{4}
}

func (x *CancelStakes) GetCancels() []*CancelStake {
	if x != nil {
		return x.Cancels
	}
	return nil
}

//storage
type Fund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  []byte     `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Accounts []*Account `protobuf:"bytes,2,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
}

func (x *Fund) Reset() {
	*x = Fund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fund) ProtoMessage() {}

func (x *Fund) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fund.ProtoReflect.Descriptor instead.
func (*Fund) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{5}
}

func (x *Fund) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Fund) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type AccountSettle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTradeToken  bool   `protobuf:"varint,1,opt,name=IsTradeToken,proto3" json:"IsTradeToken,omitempty"`
	IncAvailable  []byte `protobuf:"bytes,2,opt,name=IncAvailable,proto3" json:"IncAvailable,omitempty"`
	ReduceLocked  []byte `protobuf:"bytes,3,opt,name=ReduceLocked,proto3" json:"ReduceLocked,omitempty"`
	ReleaseLocked []byte `protobuf:"bytes,4,opt,name=ReleaseLocked,proto3" json:"ReleaseLocked,omitempty"`
}

func (x *AccountSettle) Reset() {
	*x = AccountSettle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSettle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSettle) ProtoMessage() {}

func (x *AccountSettle) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSettle.ProtoReflect.Descriptor instead.
func (*AccountSettle) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{6}
}

func (x *AccountSettle) GetIsTradeToken() bool {
	if x != nil {
		return x.IsTradeToken
	}
	return false
}

func (x *AccountSettle) GetIncAvailable() []byte {
	if x != nil {
		return x.IncAvailable
	}
	return nil
}

func (x *AccountSettle) GetReduceLocked() []byte {
	if x != nil {
		return x.ReduceLocked
	}
	return nil
}

func (x *AccountSettle) GetReleaseLocked() []byte {
	if x != nil {
		return x.ReleaseLocked
	}
	return nil
}

type FundSettle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address        []byte           `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	AccountSettles []*AccountSettle `protobuf:"bytes,2,rep,name=AccountSettles,proto3" json:"AccountSettles,omitempty"`
}

func (x *FundSettle) Reset() {
	*x = FundSettle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundSettle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundSettle) ProtoMessage() {}

func (x *FundSettle) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundSettle.ProtoReflect.Descriptor instead.
func (*FundSettle) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{7}
}

func (x *FundSettle) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *FundSettle) GetAccountSettles() []*AccountSettle {
	if x != nil {
		return x.AccountSettles
	}
	return nil
}

type FeeSettle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	BaseFee     []byte `protobuf:"bytes,2,opt,name=BaseFee,proto3" json:"BaseFee,omitempty"`         // FeeSumAccount.BaseAmount, FeeSumAccount.InviterBonusAmount, UserFeeAccount.InviterBonusAmount
	OperatorFee []byte `protobuf:"bytes,3,opt,name=OperatorFee,proto3" json:"OperatorFee,omitempty"` // OperatorFeeAccount.Amount
}

func (x *FeeSettle) Reset() {
	*x = FeeSettle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeSettle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeSettle) ProtoMessage() {}

func (x *FeeSettle) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeSettle.ProtoReflect.Descriptor instead.
func (*FeeSettle) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{8}
}

func (x *FeeSettle) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *FeeSettle) GetBaseFee() []byte {
	if x != nil {
		return x.BaseFee
	}
	return nil
}

func (x *FeeSettle) GetOperatorFee() []byte {
	if x != nil {
		return x.OperatorFee
	}
	return nil
}

//must be same markets
type SettleActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeToken  []byte        `protobuf:"bytes,1,opt,name=TradeToken,proto3" json:"TradeToken,omitempty"`
	QuoteToken  []byte        `protobuf:"bytes,2,opt,name=QuoteToken,proto3" json:"QuoteToken,omitempty"`
	FundActions []*FundSettle `protobuf:"bytes,3,rep,name=FundActions,proto3" json:"FundActions,omitempty"`
	FeeActions  []*FeeSettle  `protobuf:"bytes,4,rep,name=FeeActions,proto3" json:"FeeActions,omitempty"`
}

func (x *SettleActions) Reset() {
	*x = SettleActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleActions) ProtoMessage() {}

func (x *SettleActions) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleActions.ProtoReflect.Descriptor instead.
func (*SettleActions) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{9}
}

func (x *SettleActions) GetTradeToken() []byte {
	if x != nil {
		return x.TradeToken
	}
	return nil
}

func (x *SettleActions) GetQuoteToken() []byte {
	if x != nil {
		return x.QuoteToken
	}
	return nil
}

func (x *SettleActions) GetFundActions() []*FundSettle {
	if x != nil {
		return x.FundActions
	}
	return nil
}

func (x *SettleActions) GetFeeActions() []*FeeSettle {
	if x != nil {
		return x.FeeActions
	}
	return nil
}

type FeeForDividend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token []byte `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	// rolled amount : 99% part of last period BaseAmount rolled to this period +
	// open new market fee +
	// create new inviter fee +
	// trade baseFee[include markets allow mine and not allow mine]
	DividendPoolAmount []byte `protobuf:"bytes,2,opt,name=DividendPoolAmount,proto3" json:"DividendPoolAmount,omitempty"`
	NotRoll            bool   `protobuf:"varint,3,opt,name=NotRoll,proto3" json:"NotRoll,omitempty"`
}

func (x *FeeForDividend) Reset() {
	*x = FeeForDividend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeForDividend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeForDividend) ProtoMessage() {}

func (x *FeeForDividend) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeForDividend.ProtoReflect.Descriptor instead.
func (*FeeForDividend) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{10}
}

func (x *FeeForDividend) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *FeeForDividend) GetDividendPoolAmount() []byte {
	if x != nil {
		return x.DividendPoolAmount
	}
	return nil
}

func (x *FeeForDividend) GetNotRoll() bool {
	if x != nil {
		return x.NotRoll
	}
	return false
}

type FeeForMine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteTokenType    int32  `protobuf:"varint,1,opt,name=QuoteTokenType,proto3" json:"QuoteTokenType,omitempty"`
	BaseAmount        []byte `protobuf:"bytes,2,opt,name=BaseAmount,proto3" json:"BaseAmount,omitempty"`               // normal trade fee
	InviteBonusAmount []byte `protobuf:"bytes,3,opt,name=InviteBonusAmount,proto3" json:"InviteBonusAmount,omitempty"` // invitee trade fee
}

func (x *FeeForMine) Reset() {
	*x = FeeForMine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeForMine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeForMine) ProtoMessage() {}

func (x *FeeForMine) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeForMine.ProtoReflect.Descriptor instead.
func (*FeeForMine) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{11}
}

func (x *FeeForMine) GetQuoteTokenType() int32 {
	if x != nil {
		return x.QuoteTokenType
	}
	return 0
}

func (x *FeeForMine) GetBaseAmount() []byte {
	if x != nil {
		return x.BaseAmount
	}
	return nil
}

func (x *FeeForMine) GetInviteBonusAmount() []byte {
	if x != nil {
		return x.InviteBonusAmount
	}
	return nil
}

type DexFeesByPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeesForDividend []*FeeForDividend `protobuf:"bytes,1,rep,name=FeesForDividend,proto3" json:"FeesForDividend,omitempty"`
	FeesForMine     []*FeeForMine     `protobuf:"bytes,2,rep,name=FeesForMine,proto3" json:"FeesForMine,omitempty"`
	LastValidPeriod uint64            `protobuf:"varint,3,opt,name=lastValidPeriod,proto3" json:"lastValidPeriod,omitempty"`
	FinishDividend  bool              `protobuf:"varint,4,opt,name=FinishDividend,proto3" json:"FinishDividend,omitempty"`
	FinishMine      bool              `protobuf:"varint,5,opt,name=FinishMine,proto3" json:"FinishMine,omitempty"`
}

func (x *DexFeesByPeriod) Reset() {
	*x = DexFeesByPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DexFeesByPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DexFeesByPeriod) ProtoMessage() {}

func (x *DexFeesByPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DexFeesByPeriod.ProtoReflect.Descriptor instead.
func (*DexFeesByPeriod) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{12}
}

func (x *DexFeesByPeriod) GetFeesForDividend() []*FeeForDividend {
	if x != nil {
		return x.FeesForDividend
	}
	return nil
}

func (x *DexFeesByPeriod) GetFeesForMine() []*FeeForMine {
	if x != nil {
		return x.FeesForMine
	}
	return nil
}

func (x *DexFeesByPeriod) GetLastValidPeriod() uint64 {
	if x != nil {
		return x.LastValidPeriod
	}
	return 0
}

func (x *DexFeesByPeriod) GetFinishDividend() bool {
	if x != nil {
		return x.FinishDividend
	}
	return false
}

func (x *DexFeesByPeriod) GetFinishMine() bool {
	if x != nil {
		return x.FinishMine
	}
	return false
}

type FeeAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteTokenType    int32  `protobuf:"varint,1,opt,name=QuoteTokenType,proto3" json:"QuoteTokenType,omitempty"`
	BaseAmount        []byte `protobuf:"bytes,2,opt,name=BaseAmount,proto3" json:"BaseAmount,omitempty"`
	InviteBonusAmount []byte `protobuf:"bytes,3,opt,name=InviteBonusAmount,proto3" json:"InviteBonusAmount,omitempty"`
}

func (x *FeeAccount) Reset() {
	*x = FeeAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeAccount) ProtoMessage() {}

func (x *FeeAccount) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeAccount.ProtoReflect.Descriptor instead.
func (*FeeAccount) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{13}
}

func (x *FeeAccount) GetQuoteTokenType() int32 {
	if x != nil {
		return x.QuoteTokenType
	}
	return 0
}

func (x *FeeAccount) GetBaseAmount() []byte {
	if x != nil {
		return x.BaseAmount
	}
	return nil
}

func (x *FeeAccount) GetInviteBonusAmount() []byte {
	if x != nil {
		return x.InviteBonusAmount
	}
	return nil
}

type FeesByPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fees   []*FeeAccount `protobuf:"bytes,1,rep,name=Fees,proto3" json:"Fees,omitempty"`
	Period uint64        `protobuf:"varint,2,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *FeesByPeriod) Reset() {
	*x = FeesByPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeesByPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeesByPeriod) ProtoMessage() {}

func (x *FeesByPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeesByPeriod.ProtoReflect.Descriptor instead.
func (*FeesByPeriod) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{14}
}

func (x *FeesByPeriod) GetFees() []*FeeAccount {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *FeesByPeriod) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

type UserFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fees []*FeesByPeriod `protobuf:"bytes,1,rep,name=Fees,proto3" json:"Fees,omitempty"`
}

func (x *UserFees) Reset() {
	*x = UserFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFees) ProtoMessage() {}

func (x *UserFees) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFees.ProtoReflect.Descriptor instead.
func (*UserFees) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{15}
}

func (x *UserFees) GetFees() []*FeesByPeriod {
	if x != nil {
		return x.Fees
	}
	return nil
}

type OperatorMarketFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketId             int32  `protobuf:"varint,1,opt,name=MarketId,proto3" json:"MarketId,omitempty"`
	TakerOperatorFeeRate int32  `protobuf:"varint,2,opt,name=TakerOperatorFeeRate,proto3" json:"TakerOperatorFeeRate,omitempty"`
	MakerOperatorFeeRate int32  `protobuf:"varint,3,opt,name=MakerOperatorFeeRate,proto3" json:"MakerOperatorFeeRate,omitempty"`
	Amount               []byte `protobuf:"bytes,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *OperatorMarketFee) Reset() {
	*x = OperatorMarketFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorMarketFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorMarketFee) ProtoMessage() {}

func (x *OperatorMarketFee) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorMarketFee.ProtoReflect.Descriptor instead.
func (*OperatorMarketFee) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{16}
}

func (x *OperatorMarketFee) GetMarketId() int32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

func (x *OperatorMarketFee) GetTakerOperatorFeeRate() int32 {
	if x != nil {
		return x.TakerOperatorFeeRate
	}
	return 0
}

func (x *OperatorMarketFee) GetMakerOperatorFeeRate() int32 {
	if x != nil {
		return x.MakerOperatorFeeRate
	}
	return 0
}

func (x *OperatorMarketFee) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type OperatorFeeAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      []byte               `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	MarketFees []*OperatorMarketFee `protobuf:"bytes,2,rep,name=MarketFees,proto3" json:"MarketFees,omitempty"`
}

func (x *OperatorFeeAccount) Reset() {
	*x = OperatorFeeAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorFeeAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorFeeAccount) ProtoMessage() {}

func (x *OperatorFeeAccount) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorFeeAccount.ProtoReflect.Descriptor instead.
func (*OperatorFeeAccount) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{17}
}

func (x *OperatorFeeAccount) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *OperatorFeeAccount) GetMarketFees() []*OperatorMarketFee {
	if x != nil {
		return x.MarketFees
	}
	return nil
}

type OperatorFeesByPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorFees []*OperatorFeeAccount `protobuf:"bytes,1,rep,name=OperatorFees,proto3" json:"OperatorFees,omitempty"`
}

func (x *OperatorFeesByPeriod) Reset() {
	*x = OperatorFeesByPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorFeesByPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorFeesByPeriod) ProtoMessage() {}

func (x *OperatorFeesByPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorFeesByPeriod.ProtoReflect.Descriptor instead.
func (*OperatorFeesByPeriod) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{18}
}

func (x *OperatorFeesByPeriod) GetOperatorFees() []*OperatorFeeAccount {
	if x != nil {
		return x.OperatorFees
	}
	return nil
}

type VxFundByPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period uint64 `protobuf:"varint,1,opt,name=Period,proto3" json:"Period,omitempty"` // last snapshot height in period
	Amount []byte `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *VxFundByPeriod) Reset() {
	*x = VxFundByPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VxFundByPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VxFundByPeriod) ProtoMessage() {}

func (x *VxFundByPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VxFundByPeriod.ProtoReflect.Descriptor instead.
func (*VxFundByPeriod) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{19}
}

func (x *VxFundByPeriod) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *VxFundByPeriod) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type VxFunds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Funds []*VxFundByPeriod `protobuf:"bytes,1,rep,name=Funds,proto3" json:"Funds,omitempty"`
}

func (x *VxFunds) Reset() {
	*x = VxFunds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VxFunds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VxFunds) ProtoMessage() {}

func (x *VxFunds) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VxFunds.ProtoReflect.Descriptor instead.
func (*VxFunds) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{20}
}

func (x *VxFunds) GetFunds() []*VxFundByPeriod {
	if x != nil {
		return x.Funds
	}
	return nil
}

type VIPStaking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	StakedTimes   int32    `protobuf:"varint,2,opt,name=StakedTimes,proto3" json:"StakedTimes,omitempty"`    // Staked times in case duplicate stakes happen
	StakingHashes [][]byte `protobuf:"bytes,3,rep,name=StakingHashes,proto3" json:"StakingHashes,omitempty"` // in case duplicate stakes happen
}

func (x *VIPStaking) Reset() {
	*x = VIPStaking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VIPStaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VIPStaking) ProtoMessage() {}

func (x *VIPStaking) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VIPStaking.ProtoReflect.Descriptor instead.
func (*VIPStaking) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{21}
}

func (x *VIPStaking) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *VIPStaking) GetStakedTimes() int32 {
	if x != nil {
		return x.StakedTimes
	}
	return 0
}

func (x *VIPStaking) GetStakingHashes() [][]byte {
	if x != nil {
		return x.StakingHashes
	}
	return nil
}

type DelegateStakeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StakeType int32  `protobuf:"varint,1,opt,name=StakeType,proto3" json:"StakeType,omitempty"` // 1 StakeForMining, 2 StakeForVIP, 3 StakeForSuperVIP, 4, AgentSuperVIP
	Address   []byte `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Principal []byte `protobuf:"bytes,3,opt,name=Principal,proto3" json:"Principal,omitempty"` // in case stake for other address
	Amount    []byte `protobuf:"bytes,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Status    int32  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"` // 0 pending, 1 confirmed, 2 cancelling
	SerialNo  uint64 `protobuf:"varint,6,opt,name=SerialNo,proto3" json:"SerialNo,omitempty"`
	Id        []byte `protobuf:"bytes,7,opt,name=Id,proto3" json:"Id,omitempty"` //not set on serialize
}

func (x *DelegateStakeInfo) Reset() {
	*x = DelegateStakeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegateStakeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegateStakeInfo) ProtoMessage() {}

func (x *DelegateStakeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegateStakeInfo.ProtoReflect.Descriptor instead.
func (*DelegateStakeInfo) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{22}
}

func (x *DelegateStakeInfo) GetStakeType() int32 {
	if x != nil {
		return x.StakeType
	}
	return 0
}

func (x *DelegateStakeInfo) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *DelegateStakeInfo) GetPrincipal() []byte {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *DelegateStakeInfo) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *DelegateStakeInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DelegateStakeInfo) GetSerialNo() uint64 {
	if x != nil {
		return x.SerialNo
	}
	return 0
}

func (x *DelegateStakeInfo) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type DelegateStakeAddressIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	StakeType int32  `protobuf:"varint,2,opt,name=StakeType,proto3" json:"StakeType,omitempty"`
}

func (x *DelegateStakeAddressIndex) Reset() {
	*x = DelegateStakeAddressIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegateStakeAddressIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegateStakeAddressIndex) ProtoMessage() {}

func (x *DelegateStakeAddressIndex) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegateStakeAddressIndex.ProtoReflect.Descriptor instead.
func (*DelegateStakeAddressIndex) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{23}
}

func (x *DelegateStakeAddressIndex) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DelegateStakeAddressIndex) GetStakeType() int32 {
	if x != nil {
		return x.StakeType
	}
	return 0
}

type MiningStakingByPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period uint64 `protobuf:"varint,1,opt,name=Period,proto3" json:"Period,omitempty"` // last snapshot height in period
	Amount []byte `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *MiningStakingByPeriod) Reset() {
	*x = MiningStakingByPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningStakingByPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningStakingByPeriod) ProtoMessage() {}

func (x *MiningStakingByPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningStakingByPeriod.ProtoReflect.Descriptor instead.
func (*MiningStakingByPeriod) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{24}
}

func (x *MiningStakingByPeriod) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *MiningStakingByPeriod) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type MiningStakings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stakings []*MiningStakingByPeriod `protobuf:"bytes,1,rep,name=Stakings,proto3" json:"Stakings,omitempty"`
}

func (x *MiningStakings) Reset() {
	*x = MiningStakings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningStakings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningStakings) ProtoMessage() {}

func (x *MiningStakings) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningStakings.ProtoReflect.Descriptor instead.
func (*MiningStakings) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{25}
}

func (x *MiningStakings) GetStakings() []*MiningStakingByPeriod {
	if x != nil {
		return x.Stakings
	}
	return nil
}

type VxSettleAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Amount  []byte `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *VxSettleAction) Reset() {
	*x = VxSettleAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VxSettleAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VxSettleAction) ProtoMessage() {}

func (x *VxSettleAction) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VxSettleAction.ProtoReflect.Descriptor instead.
func (*VxSettleAction) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{26}
}

func (x *VxSettleAction) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *VxSettleAction) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type VxSettleActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period  uint64            `protobuf:"varint,1,opt,name=Period,proto3" json:"Period,omitempty"`
	Page    int32             `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	Actions []*VxSettleAction `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *VxSettleActions) Reset() {
	*x = VxSettleActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VxSettleActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VxSettleActions) ProtoMessage() {}

func (x *VxSettleActions) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VxSettleActions.ProtoReflect.Descriptor instead.
func (*VxSettleActions) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{27}
}

func (x *VxSettleActions) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *VxSettleActions) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *VxSettleActions) GetActions() []*VxSettleAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

//event
type PeriodJobForBiz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period  uint64 `protobuf:"varint,1,opt,name=Period,proto3" json:"Period,omitempty"`
	BizType int32  `protobuf:"varint,2,opt,name=BizType,proto3" json:"BizType,omitempty"`
}

func (x *PeriodJobForBiz) Reset() {
	*x = PeriodJobForBiz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodJobForBiz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodJobForBiz) ProtoMessage() {}

func (x *PeriodJobForBiz) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodJobForBiz.ProtoReflect.Descriptor instead.
func (*PeriodJobForBiz) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{28}
}

func (x *PeriodJobForBiz) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *PeriodJobForBiz) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

//event
type FeeDividendForVxHolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	VxAmount    []byte `protobuf:"bytes,2,opt,name=VxAmount,proto3" json:"VxAmount,omitempty"`
	FeeToken    []byte `protobuf:"bytes,3,opt,name=FeeToken,proto3" json:"FeeToken,omitempty"` // fee token to dividend
	FeeDividend []byte `protobuf:"bytes,4,opt,name=FeeDividend,proto3" json:"FeeDividend,omitempty"`
}

func (x *FeeDividendForVxHolder) Reset() {
	*x = FeeDividendForVxHolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeDividendForVxHolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeDividendForVxHolder) ProtoMessage() {}

func (x *FeeDividendForVxHolder) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeDividendForVxHolder.ProtoReflect.Descriptor instead.
func (*FeeDividendForVxHolder) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{29}
}

func (x *FeeDividendForVxHolder) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *FeeDividendForVxHolder) GetVxAmount() []byte {
	if x != nil {
		return x.VxAmount
	}
	return nil
}

func (x *FeeDividendForVxHolder) GetFeeToken() []byte {
	if x != nil {
		return x.FeeToken
	}
	return nil
}

func (x *FeeDividendForVxHolder) GetFeeDividend() []byte {
	if x != nil {
		return x.FeeDividend
	}
	return nil
}

//event
type MinedVxForFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address        []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	QuoteTokenType int32  `protobuf:"varint,2,opt,name=QuoteTokenType,proto3" json:"QuoteTokenType,omitempty"` // 1 vite, 2 eth, 3 btc, 4 usd
	FeeAmount      []byte `protobuf:"bytes,3,opt,name=FeeAmount,proto3" json:"FeeAmount,omitempty"`            // decimals depends on QuoteTokenType
	MinedAmount    []byte `protobuf:"bytes,4,opt,name=MinedAmount,proto3" json:"MinedAmount,omitempty"`        // mined vx amount
}

func (x *MinedVxForFee) Reset() {
	*x = MinedVxForFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinedVxForFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinedVxForFee) ProtoMessage() {}

func (x *MinedVxForFee) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinedVxForFee.ProtoReflect.Descriptor instead.
func (*MinedVxForFee) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{30}
}

func (x *MinedVxForFee) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MinedVxForFee) GetQuoteTokenType() int32 {
	if x != nil {
		return x.QuoteTokenType
	}
	return 0
}

func (x *MinedVxForFee) GetFeeAmount() []byte {
	if x != nil {
		return x.FeeAmount
	}
	return nil
}

func (x *MinedVxForFee) GetMinedAmount() []byte {
	if x != nil {
		return x.MinedAmount
	}
	return nil
}

//event
type MinedVxForStaking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address      []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	StakedAmount []byte `protobuf:"bytes,2,opt,name=StakedAmount,proto3" json:"StakedAmount,omitempty"` // Staked vite amount
	MinedAmount  []byte `protobuf:"bytes,3,opt,name=MinedAmount,proto3" json:"MinedAmount,omitempty"`   // mined vx amount
}

func (x *MinedVxForStaking) Reset() {
	*x = MinedVxForStaking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinedVxForStaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinedVxForStaking) ProtoMessage() {}

func (x *MinedVxForStaking) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinedVxForStaking.ProtoReflect.Descriptor instead.
func (*MinedVxForStaking) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{31}
}

func (x *MinedVxForStaking) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MinedVxForStaking) GetStakedAmount() []byte {
	if x != nil {
		return x.StakedAmount
	}
	return nil
}

func (x *MinedVxForStaking) GetMinedAmount() []byte {
	if x != nil {
		return x.MinedAmount
	}
	return nil
}

//event
type OperatorFeeDividend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address              []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	MarketId             int32  `protobuf:"varint,2,opt,name=MarketId,proto3" json:"MarketId,omitempty"`
	TakerOperatorFeeRate int32  `protobuf:"varint,3,opt,name=TakerOperatorFeeRate,proto3" json:"TakerOperatorFeeRate,omitempty"`
	MakerOperatorFeeRate int32  `protobuf:"varint,4,opt,name=MakerOperatorFeeRate,proto3" json:"MakerOperatorFeeRate,omitempty"`
	Amount               []byte `protobuf:"bytes,5,opt,name=Amount,proto3" json:"Amount,omitempty"` //depend on marketInfo.QuoteToken
}

func (x *OperatorFeeDividend) Reset() {
	*x = OperatorFeeDividend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorFeeDividend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorFeeDividend) ProtoMessage() {}

func (x *OperatorFeeDividend) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorFeeDividend.ProtoReflect.Descriptor instead.
func (*OperatorFeeDividend) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{32}
}

func (x *OperatorFeeDividend) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *OperatorFeeDividend) GetMarketId() int32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

func (x *OperatorFeeDividend) GetTakerOperatorFeeRate() int32 {
	if x != nil {
		return x.TakerOperatorFeeRate
	}
	return 0
}

func (x *OperatorFeeDividend) GetMakerOperatorFeeRate() int32 {
	if x != nil {
		return x.MakerOperatorFeeRate
	}
	return 0
}

func (x *OperatorFeeDividend) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

//event
type MinedVxForOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizType int32  `protobuf:"varint,1,opt,name=BizType,proto3" json:"BizType,omitempty"` // 1 MineForMaker, 2 MineForMaintainer
	Address []byte `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Amount  []byte `protobuf:"bytes,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *MinedVxForOperation) Reset() {
	*x = MinedVxForOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinedVxForOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinedVxForOperation) ProtoMessage() {}

func (x *MinedVxForOperation) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinedVxForOperation.ProtoReflect.Descriptor instead.
func (*MinedVxForOperation) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{33}
}

func (x *MinedVxForOperation) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *MinedVxForOperation) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MinedVxForOperation) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

//event
type InviteRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inviter    []byte `protobuf:"bytes,1,opt,name=Inviter,proto3" json:"Inviter,omitempty"`
	Invitee    []byte `protobuf:"bytes,2,opt,name=Invitee,proto3" json:"Invitee,omitempty"`
	InviteCode uint32 `protobuf:"varint,3,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
}

func (x *InviteRelation) Reset() {
	*x = InviteRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteRelation) ProtoMessage() {}

func (x *InviteRelation) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteRelation.ProtoReflect.Descriptor instead.
func (*InviteRelation) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{34}
}

func (x *InviteRelation) GetInviter() []byte {
	if x != nil {
		return x.Inviter
	}
	return nil
}

func (x *InviteRelation) GetInvitee() []byte {
	if x != nil {
		return x.Invitee
	}
	return nil
}

func (x *InviteRelation) GetInviteCode() uint32 {
	if x != nil {
		return x.InviteCode
	}
	return 0
}

//event
type SettleMakerMinedVx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodId uint64 `protobuf:"varint,1,opt,name=PeriodId,proto3" json:"PeriodId,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	Finish   bool   `protobuf:"varint,3,opt,name=Finish,proto3" json:"Finish,omitempty"`
}

func (x *SettleMakerMinedVx) Reset() {
	*x = SettleMakerMinedVx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleMakerMinedVx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleMakerMinedVx) ProtoMessage() {}

func (x *SettleMakerMinedVx) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleMakerMinedVx.ProtoReflect.Descriptor instead.
func (*SettleMakerMinedVx) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{35}
}

func (x *SettleMakerMinedVx) GetPeriodId() uint64 {
	if x != nil {
		return x.PeriodId
	}
	return 0
}

func (x *SettleMakerMinedVx) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SettleMakerMinedVx) GetFinish() bool {
	if x != nil {
		return x.Finish
	}
	return false
}

//event
type MarketAgentRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Principal []byte `protobuf:"bytes,1,opt,name=Principal,proto3" json:"Principal,omitempty"`
	Agent     []byte `protobuf:"bytes,2,opt,name=Agent,proto3" json:"Agent,omitempty"`
	MarketId  int32  `protobuf:"varint,3,opt,name=MarketId,proto3" json:"MarketId,omitempty"`
}

func (x *MarketAgentRelation) Reset() {
	*x = MarketAgentRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketAgentRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketAgentRelation) ProtoMessage() {}

func (x *MarketAgentRelation) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketAgentRelation.ProtoReflect.Descriptor instead.
func (*MarketAgentRelation) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{36}
}

func (x *MarketAgentRelation) GetPrincipal() []byte {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *MarketAgentRelation) GetAgent() []byte {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *MarketAgentRelation) GetMarketId() int32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

//event
type BurnVite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizType int32  `protobuf:"varint,1,opt,name=BizType,proto3" json:"BizType,omitempty"` // 1 BurnForDexViteFee
	Amount  []byte `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *BurnVite) Reset() {
	*x = BurnVite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnVite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnVite) ProtoMessage() {}

func (x *BurnVite) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnVite.ProtoReflect.Descriptor instead.
func (*BurnVite) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{37}
}

func (x *BurnVite) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *BurnVite) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

//event
type TransferAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizType int32  `protobuf:"varint,1,opt,name=BizType,proto3" json:"BizType,omitempty"` // 1 deposit, 2 agentDeposit, 3 withdraw, 4 assignedWithdraw
	From    []byte `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To      []byte `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
	Token   []byte `protobuf:"bytes,4,opt,name=Token,proto3" json:"Token,omitempty"`
	Amount  []byte `protobuf:"bytes,5,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Extra   []byte `protobuf:"bytes,6,opt,name=Extra,proto3" json:"Extra,omitempty"`
}

func (x *TransferAsset) Reset() {
	*x = TransferAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dex_fund_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferAsset) ProtoMessage() {}

func (x *TransferAsset) ProtoReflect() protoreflect.Message {
	mi := &file_dex_fund_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferAsset.ProtoReflect.Descriptor instead.
func (*TransferAsset) Descriptor() ([]byte, []int) {
	return file_dex_fund_proto_rawDescGZIP(), []int{38}
}

func (x *TransferAsset) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *TransferAsset) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferAsset) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferAsset) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *TransferAsset) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TransferAsset) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_dex_fund_proto protoreflect.FileDescriptor

var file_dex_fund_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x65, 0x78, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x56, 0x78, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x56, 0x78, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x56,
	0x78, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x56, 0x78, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a,
	0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x22, 0x3e, 0x0a, 0x08, 0x56, 0x78, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x09, 0x56, 0x78, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x78,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22,
	0x41, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x07, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x73,
	0x22, 0x4c, 0x0a, 0x04, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xa1,
	0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x63, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x49, 0x6e, 0x63, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x22, 0x64, 0x0a, 0x0a, 0x46, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x0e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x09, 0x46, 0x65, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0d,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x33, 0x0a,
	0x0b, 0x46, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x0b, 0x46, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x46, 0x65, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x65, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x0a, 0x46, 0x65, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x70, 0x0a, 0x0e, 0x46, 0x65, 0x65, 0x46, 0x6f, 0x72, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x12,
	0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x4e, 0x6f, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4e,
	0x6f, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x46, 0x65, 0x65, 0x46, 0x6f,
	0x72, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x42, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf9, 0x01, 0x0a, 0x0f,
	0x44, 0x65, 0x78, 0x46, 0x65, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x3f, 0x0a, 0x0f, 0x46, 0x65, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x65, 0x65, 0x46, 0x6f, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52,
	0x0f, 0x46, 0x65, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64,
	0x12, 0x33, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x69, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65,
	0x65, 0x46, 0x6f, 0x72, 0x4d, 0x69, 0x6e, 0x65, 0x52, 0x0b, 0x46, 0x65, 0x65, 0x73, 0x46, 0x6f,
	0x72, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44,
	0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x4d, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x4d, 0x69, 0x6e, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x46, 0x65, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x0c,
	0x46, 0x65, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x04,
	0x46, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x46,
	0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x33, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65,
	0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x04, 0x46, 0x65, 0x65, 0x73,
	0x22, 0xaf, 0x01, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46,
	0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x64, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x38,
	0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x0a, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x14, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x3d, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x73, 0x22,
	0x40, 0x0a, 0x0e, 0x56, 0x78, 0x46, 0x75, 0x6e, 0x64, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x36, 0x0a, 0x07, 0x56, 0x78, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x05,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x78, 0x46, 0x75, 0x6e, 0x64, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x52, 0x05, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x72, 0x0a, 0x0a, 0x56, 0x49, 0x50,
	0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d,
	0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0xc5, 0x01,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x47, 0x0a, 0x15, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x0e, 0x4d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x53,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x42, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x08, 0x53, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x42, 0x0a, 0x0e, 0x56, 0x78, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6e, 0x0a, 0x0f, 0x56, 0x78, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x78, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x43, 0x0a, 0x0f, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x4a, 0x6f, 0x62, 0x46, 0x6f, 0x72, 0x42, 0x69, 0x7a, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8c,
	0x01, 0x0a, 0x16, 0x46, 0x65, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x46, 0x6f,
	0x72, 0x56, 0x78, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x56, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x46, 0x65, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x46,
	0x65, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x46, 0x65, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x22, 0x91, 0x01,
	0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x78, 0x46, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x73, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x78, 0x46, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x4d, 0x69, 0x6e, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x14, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x4d, 0x61, 0x6b, 0x65,
	0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x13, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x78, 0x46,
	0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x42,
	0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x69,
	0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x64, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5c, 0x0a,
	0x12, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x65,
	0x64, 0x56, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x22, 0x65, 0x0a, 0x13, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x3c, 0x0a, 0x08, 0x42, 0x75, 0x72, 0x6e, 0x56, 0x69, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x91, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x54, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dex_fund_proto_rawDescOnce sync.Once
	file_dex_fund_proto_rawDescData = file_dex_fund_proto_rawDesc
)

func file_dex_fund_proto_rawDescGZIP() []byte {
	file_dex_fund_proto_rawDescOnce.Do(func() {
		file_dex_fund_proto_rawDescData = protoimpl.X.CompressGZIP(file_dex_fund_proto_rawDescData)
	})
	return file_dex_fund_proto_rawDescData
}

var file_dex_fund_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_dex_fund_proto_goTypes = []interface{}{
	(*Account)(nil),                   // 0: proto.Account
	(*VxUnlock)(nil),                  // 1: proto.VxUnlock
	(*VxUnlocks)(nil),                 // 2: proto.VxUnlocks
	(*CancelStake)(nil),               // 3: proto.CancelStake
	(*CancelStakes)(nil),              // 4: proto.CancelStakes
	(*Fund)(nil),                      // 5: proto.Fund
	(*AccountSettle)(nil),             // 6: proto.AccountSettle
	(*FundSettle)(nil),                // 7: proto.FundSettle
	(*FeeSettle)(nil),                 // 8: proto.FeeSettle
	(*SettleActions)(nil),             // 9: proto.SettleActions
	(*FeeForDividend)(nil),            // 10: proto.FeeForDividend
	(*FeeForMine)(nil),                // 11: proto.FeeForMine
	(*DexFeesByPeriod)(nil),           // 12: proto.DexFeesByPeriod
	(*FeeAccount)(nil),                // 13: proto.FeeAccount
	(*FeesByPeriod)(nil),              // 14: proto.FeesByPeriod
	(*UserFees)(nil),                  // 15: proto.UserFees
	(*OperatorMarketFee)(nil),         // 16: proto.OperatorMarketFee
	(*OperatorFeeAccount)(nil),        // 17: proto.OperatorFeeAccount
	(*OperatorFeesByPeriod)(nil),      // 18: proto.OperatorFeesByPeriod
	(*VxFundByPeriod)(nil),            // 19: proto.VxFundByPeriod
	(*VxFunds)(nil),                   // 20: proto.VxFunds
	(*VIPStaking)(nil),                // 21: proto.VIPStaking
	(*DelegateStakeInfo)(nil),         // 22: proto.DelegateStakeInfo
	(*DelegateStakeAddressIndex)(nil), // 23: proto.DelegateStakeAddressIndex
	(*MiningStakingByPeriod)(nil),     // 24: proto.MiningStakingByPeriod
	(*MiningStakings)(nil),            // 25: proto.MiningStakings
	(*VxSettleAction)(nil),            // 26: proto.VxSettleAction
	(*VxSettleActions)(nil),           // 27: proto.VxSettleActions
	(*PeriodJobForBiz)(nil),           // 28: proto.PeriodJobForBiz
	(*FeeDividendForVxHolder)(nil),    // 29: proto.FeeDividendForVxHolder
	(*MinedVxForFee)(nil),             // 30: proto.MinedVxForFee
	(*MinedVxForStaking)(nil),         // 31: proto.MinedVxForStaking
	(*OperatorFeeDividend)(nil),       // 32: proto.OperatorFeeDividend
	(*MinedVxForOperation)(nil),       // 33: proto.MinedVxForOperation
	(*InviteRelation)(nil),            // 34: proto.InviteRelation
	(*SettleMakerMinedVx)(nil),        // 35: proto.SettleMakerMinedVx
	(*MarketAgentRelation)(nil),       // 36: proto.MarketAgentRelation
	(*BurnVite)(nil),                  // 37: proto.BurnVite
	(*TransferAsset)(nil),             // 38: proto.TransferAsset
}
var file_dex_fund_proto_depIdxs = []int32{
	1,  // 0: proto.VxUnlocks.Unlocks:type_name -> proto.VxUnlock
	3,  // 1: proto.CancelStakes.Cancels:type_name -> proto.CancelStake
	0,  // 2: proto.Fund.Accounts:type_name -> proto.Account
	6,  // 3: proto.FundSettle.AccountSettles:type_name -> proto.AccountSettle
	7,  // 4: proto.SettleActions.FundActions:type_name -> proto.FundSettle
	8,  // 5: proto.SettleActions.FeeActions:type_name -> proto.FeeSettle
	10, // 6: proto.DexFeesByPeriod.FeesForDividend:type_name -> proto.FeeForDividend
	11, // 7: proto.DexFeesByPeriod.FeesForMine:type_name -> proto.FeeForMine
	13, // 8: proto.FeesByPeriod.Fees:type_name -> proto.FeeAccount
	14, // 9: proto.UserFees.Fees:type_name -> proto.FeesByPeriod
	16, // 10: proto.OperatorFeeAccount.MarketFees:type_name -> proto.OperatorMarketFee
	17, // 11: proto.OperatorFeesByPeriod.OperatorFees:type_name -> proto.OperatorFeeAccount
	19, // 12: proto.VxFunds.Funds:type_name -> proto.VxFundByPeriod
	24, // 13: proto.MiningStakings.Stakings:type_name -> proto.MiningStakingByPeriod
	26, // 14: proto.VxSettleActions.actions:type_name -> proto.VxSettleAction
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_dex_fund_proto_init() }
func file_dex_fund_proto_init() {
	if File_dex_fund_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dex_fund_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VxUnlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VxUnlocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelStake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelStakes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSettle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundSettle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeSettle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeForDividend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeForMine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DexFeesByPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeesByPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorMarketFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorFeeAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorFeesByPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VxFundByPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VxFunds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VIPStaking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegateStakeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegateStakeAddressIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningStakingByPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningStakings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VxSettleAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VxSettleActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodJobForBiz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeDividendForVxHolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinedVxForFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinedVxForStaking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorFeeDividend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinedVxForOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleMakerMinedVx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketAgentRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnVite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dex_fund_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dex_fund_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dex_fund_proto_goTypes,
		DependencyIndexes: file_dex_fund_proto_depIdxs,
		MessageInfos:      file_dex_fund_proto_msgTypes,
	}.Build()
	File_dex_fund_proto = out.File
	file_dex_fund_proto_rawDesc = nil
	file_dex_fund_proto_goTypes = nil
	file_dex_fund_proto_depIdxs = nil
}
